{"version":3,"sources":["common/icons/AudioActiveIcon.jsx","common/icons/AudioDefaultIcon.jsx","common/components/AudioComponent.jsx","common/components/GlossaryComponent.jsx"],"names":["AudioActiveIcon","props","xmlns","width","height","viewBox","fill","fillRule","cx","cy","r","d","AudioDefaultIcon","AudioComponent","togglePlay","setState","prevState","play","state","audio","pause","Audio","url","this","addEventListener","removeEventListener","audioIcon","onClick","Component","injectIntl","GlossaryComponent","getAnchorElement","regionId","anchorElement","document","getElementById","getContainerElement","regionElement","container","closest","containerElement","querySelector","getGlossaryItem","glossaryData","showGlossaryAudio","glossaryAudio","className","ReactHtmlParser","glossaryTerm","glossaryDefinition","onClickAway","regionData","showGlossary","Popper","id","open","anchorEl","disablePortal","modifiers","flip","enabled","boundariesElement","offset","preventOverflow","ClickAwayListener","PureComponent","defaultProps"],"mappings":"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","file":"static/js/5.70585cef.chunk.js","sourcesContent":["/**\n * PEARSON PROPRIETARY AND CONFIDENTIAL INFORMATION SUBJECT TO NDA\n * Copyright © 2020 Pearson Education, Inc. All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Pearson Education, Inc. The intellectual and technical concepts contained\n * herein are proprietary to Pearson Education, Inc. and may be covered by U.S. and Foreign Patents,\n * patent applications, and are protected by trade secret or copyright law.\n * Dissemination of this information, reproduction of this material, and copying or distribution of this software\n * is strictly forbidden unless prior written permission is obtained\n * from Pearson Education, Inc.\n */\n\n/**\n * A React component for audio active icon\n *\n * @file AudioActiveIcon.jsx\n * @author Saravanan Kandasamy\n */\n/* eslint-disable max-len */\n\nimport React from 'react';\n\nconst AudioActiveIcon = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"28\"\n    height=\"28\"\n    viewBox=\"0 0 28 28\"\n    {...props}\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <circle cx=\"14\" cy=\"14\" r=\"14\" fill=\"#E9F3F6\" />\n      <path d=\"M6 6h16v16H6z\" />\n      <path fill=\"#047A9C\" d=\"M9.084 16.614H7.375c-.76 0-1.375-.585-1.375-1.306v-2.613c0-.721.616-1.306 1.375-1.306h1.622l4.075-3.943a.706.706 0 0 1 .49-.196c.38 0 .688.292.688.653v12.194a.638.638 0 0 1-.211.47.713.713 0 0 1-.972-.017l-3.983-3.936zm7.103-8.844c-.319-.097-.504-.455-.414-.799.09-.344.422-.544.74-.446 3.075.938 5.237 3.977 5.237 7.475 0 3.498-2.162 6.537-5.237 7.475-.318.098-.65-.102-.74-.446-.09-.344.095-.702.414-.8 2.561-.781 4.363-3.314 4.363-6.229s-1.802-5.448-4.363-6.23zm-.107 2.985c-.3-.17-.417-.572-.26-.897.156-.326.527-.452.827-.283 1.51.853 2.478 2.546 2.478 4.425s-.968 3.572-2.478 4.425c-.3.17-.67.043-.827-.283-.157-.325-.04-.727.26-.897 1.108-.625 1.818-1.867 1.818-3.245 0-1.378-.71-2.62-1.818-3.245z\" />\n    </g>\n  </svg>\n);\n\nexport default AudioActiveIcon;\n","/**\n * PEARSON PROPRIETARY AND CONFIDENTIAL INFORMATION SUBJECT TO NDA\n * Copyright © 2020 Pearson Education, Inc. All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Pearson Education, Inc. The intellectual and technical concepts contained\n * herein are proprietary to Pearson Education, Inc. and may be covered by U.S. and Foreign Patents,\n * patent applications, and are protected by trade secret or copyright law.\n * Dissemination of this information, reproduction of this material, and copying or distribution of this software\n * is strictly forbidden unless prior written permission is obtained\n * from Pearson Education, Inc.\n */\n\n/**\n * A React component for audio default icon\n *\n * @file AudioDefaultIcon.jsx\n * @author Saravanan Kandasamy\n */\n/* eslint-disable max-len */\n\nimport React from 'react';\n\nconst AudioDefaultIcon = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"28\"\n    height=\"28\"\n    viewBox=\"0 0 28 28\"\n    {...props}\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path d=\"M6 6h16v16H6z\" />\n      <path\n        fill=\"#252525\"\n        d=\"M9.084 16.614H7.375c-.76 0-1.375-.585-1.375-1.306v-2.613c0-.721.616-1.306 1.375-1.306h1.622l4.075-3.943a.706.706 0 0 1 .49-.196c.38 0 .688.292.688.653v12.194a.638.638 0 0 1-.211.47.713.713 0 0 1-.972-.017l-3.983-3.936zm7.103-8.844c-.319-.097-.504-.455-.414-.799.09-.344.422-.544.74-.446 3.075.938 5.237 3.977 5.237 7.475 0 3.498-2.162 6.537-5.237 7.475-.318.098-.65-.102-.74-.446-.09-.344.095-.702.414-.8 2.561-.781 4.363-3.314 4.363-6.229s-1.802-5.448-4.363-6.23zm-.107 2.985c-.3-.17-.417-.572-.26-.897.156-.326.527-.452.827-.283 1.51.853 2.478 2.546 2.478 4.425s-.968 3.572-2.478 4.425c-.3.17-.67.043-.827-.283-.157-.325-.04-.727.26-.897 1.108-.625 1.818-1.867 1.818-3.245 0-1.378-.71-2.62-1.818-3.245z\"\n      />\n    </g>\n  </svg>\n);\n\nexport default AudioDefaultIcon;\n","/**\n * PEARSON PROPRIETARY AND CONFIDENTIAL INFORMATION SUBJECT TO NDA\n * Copyright © 2020 Pearson Education, Inc. All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Pearson Education, Inc. The intellectual and technical concepts contained\n * herein are proprietary to Pearson Education, Inc. and may be covered by U.S. and Foreign Patents,\n * patent applications, and are protected by trade secret or copyright law.\n * Dissemination of this information, reproduction of this material, and copying or distribution of this software\n * is strictly forbidden unless prior written permission is obtained\n * from Pearson Education, Inc.\n */\n\n/**\n * React container component for Audio\n *\n * @file AudioComponent.jsx\n * @author Gowtaman Madanselvaraj\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport AudioActiveIcon from '../icons/AudioActiveIcon';\nimport AudioDefaultIcon from '../icons/AudioDefaultIcon';\n\nimport '../../assets/styles/glossaryPopup.css';\n\nclass AudioComponent extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    this.audio = new Audio(this.props.url);\n  }\n\n  componentDidMount() {\n    this.audio.addEventListener('play', () => this.setState({ play: true }));\n    this.audio.addEventListener('ended', () => this.setState({ play: false }));\n  }\n\n  componentWillUnmount() {\n    this.audio.removeEventListener('play', () => this.setState({ play: true }));\n    this.audio.removeEventListener('ended', () => this.setState({ play: false }));\n  }\n\n  /**\n   * Toggles the play/pause.\n   */\n  togglePlay = () => {\n    this.setState(prevState => ({ play: !prevState.play }), () => {\n      if (this.state.play) {\n        this.audio.play();\n      } else {\n        this.audio.pause();\n      }\n    });\n  }\n\n  render() {\n    let audioIcon = (\n      <AudioDefaultIcon\n        onClick={this.togglePlay}\n      />\n    );\n    if (this.state.play) {\n      audioIcon = (\n        <AudioActiveIcon\n          onClick={this.togglePlay}\n        />\n      );\n    }\n\n    return audioIcon;\n  }\n}\n\nexport default injectIntl(AudioComponent);\n","/**\n * PEARSON PROPRIETARY AND CONFIDENTIAL INFORMATION SUBJECT TO NDA\n * Copyright © 2020 Pearson Education, Inc. All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Pearson Education, Inc.  The intellectual and technical concepts contained\n * herein are proprietary to Pearson Education, Inc. and may be covered by U.S. and Foreign Patents,\n * patent applications, and are protected by trade secret or copyright law.\n * Dissemination of this information, reproduction of this material, and copying or distribution of this software\n * is strictly forbidden unless prior written permission is obtained\n * from Pearson Education, Inc.\n */\n\n/**\n* React component for PDF glossary hotspot\n*\n* @file GlossaryComponent.jsx\n* @author Prithviraj K\n*/\n\nimport React, { PureComponent } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport PropTypes from 'prop-types';\nimport { ClickAwayListener, Popper } from '@material-ui/core';\n\nimport AudioComponent from './AudioComponent';\n\nimport '../../assets/styles/glossaryPopup.css';\n\nclass GlossaryComponent extends PureComponent {\n  /**\n   * Get the anchor element to which the popup attaches\n   *\n   * @param {number} regionId\n   */\n  getAnchorElement = (regionId) => {\n    const anchorElement = document.getElementById(`region_${regionId}`);\n\n    return anchorElement && anchorElement;\n  }\n\n  /**\n   * Get the container element to set the parent for popup\n   *\n   * @param {number} regionId\n   */\n  getContainerElement = (regionId) => {\n    /**\n     * Differentiate double page layout\n     */\n    const regionElement = document.getElementById(`region_${regionId}`);\n    const docViewer = regionElement && regionElement.closest('.docViewer');\n    const container = docViewer ? 'docViewer' : 'docViewer2';\n    const containerElement = document.getElementById(container).querySelector('.fwrJspPane .fwr-page, .fwrJspPane .fwr-single-page');\n\n    return containerElement && containerElement;\n  }\n\n  /**\n   * Get the glossary item\n   *\n   * @param {Object} glossaryData\n   */\n  getGlossaryItem = (glossaryData) => {\n    let showGlossaryAudio = false;\n\n    if (glossaryData.glossaryAudio) {\n      showGlossaryAudio = true;\n    }\n    const glossaryItem = (\n      <div className=\"glossary-content\">\n        {showGlossaryAudio\n          && (\n            <div className=\"glossary-audioIcon\">\n              <AudioComponent url={glossaryData.glossaryAudio} onClick={this.onClick} />\n            </div>\n          )\n        }\n        <p className=\"glossary-term\">{ReactHtmlParser(glossaryData.glossaryTerm)}</p>\n        <p className=\"glossary-definition\">{ReactHtmlParser(glossaryData.glossaryDefinition)}</p>\n      </div>\n    );\n\n    return glossaryItem;\n  }\n\n  render() {\n    const {\n      glossaryData,\n      onClickAway,\n      regionData,\n      showGlossary\n    } = this.props;\n    const containerElement = this.getContainerElement(regionData.regionId);\n\n    return (\n      showGlossary\n      && (\n        <Popper\n          id=\"glossary-popper\"\n          open={showGlossary}\n          anchorEl={this.getAnchorElement(regionData.regionId)}\n          container={containerElement}\n          disablePortal={false}\n          modifiers={{\n            flip: {\n              enabled: true,\n              boundariesElement: containerElement\n            },\n            offset: {\n              offset: '0,10'\n            },\n            preventOverflow: {\n              enabled: true,\n              boundariesElement: containerElement\n            }\n          }}\n        >\n          <ClickAwayListener onClickAway={onClickAway}>\n            {this.getGlossaryItem(glossaryData)}\n          </ClickAwayListener>\n        </Popper>\n      )\n    );\n  }\n}\n\nGlossaryComponent.propTypes = {\n  glossaryData: PropTypes.object,\n  onClickAway: PropTypes.func,\n  regionData: PropTypes.object,\n  showGlossary: PropTypes.bool\n};\n\nGlossaryComponent.defaultProps = {\n  glossaryData: null,\n  onClickAway: () => {},\n  regionData: null,\n  showGlossary: false\n};\n\nexport default GlossaryComponent;\n"],"sourceRoot":""}