{"version":3,"sources":["modules/bookshelf/BookshelfContainer.jsx"],"names":["BookshelfContainer","inject","observer","props","updateLaunchDarklyUser","user","ldClient","id","ldUserHash","identify","key","options","hash","then","res","console","log","catch","err","handleBookClick","bookData","type","courseId","match","lastLocationStore","Framework","getStoreRegistry","getStore","urlPrefix","url","book_id","product_id","et1CourseId","iseT1","idpId","product_entitlements","last_activity","userLastLocation","userLocation","find","location","bookId","username","smsUserId","getContextPath","userLocationDetails","encodeURIComponent","JSON","stringify","userPreferredType","canadianProxy","productId","isIntegratedLaunch","integratedBMC","constants","businessModelList","includes","business_model_code","indexOf","split","window","href","env","PAPER_API_BASE_URL","host","handleLogout","logout","userDetail","state","dataFetched","PathUtils","getQueryParameterbyName","this","bookshelf","productToken","fetch","PRODUCT_TOKEN","getEventManager","on","launchdarklyUser","getUser","ownerId","bookshelfStatus","language","userStatus","errorCode","error","setState","code","books","onBookClick","locale","currentLanguage","consoleUrl","CONSOLE_URL","isBookshelfPending","verified","isPending","isUserPending","onLogout","Component","withLDConsumer"],"mappings":"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","file":"static/js/15.51a1a0bc.chunk.js","sourcesContent":["/**\n * PEARSON PROPRIETARY AND CONFIDENTIAL INFORMATION SUBJECT TO NDA\n * Copyright Â© 2020 Pearson Education, Inc. All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Pearson Education, Inc. The intellectual and technical concepts contained\n * herein are proprietary to Pearson Education, Inc. and may be covered by U.S. and Foreign Patents,\n * patent applications, and are protected by trade secret or copyright law.\n * Dissemination of this information, reproduction of this material, and copying or distribution of this software\n * is strictly forbidden unless prior written permission is obtained\n * from Pearson Education, Inc.\n */\n\n/**\n * Bookshelf container\n *\n * @file BookshelfContainer.jsx\n * @author Saravanan Kandasamy\n */\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport { BookshelfComponent } from '@onereader/mojo-bookshelf';\nimport Framework, { shapes } from '@greenville/framework';\nimport { withLDConsumer } from 'launchdarkly-react-client-sdk';\n\nimport axios from 'axios';\nimport Bookshelf from './model/Bookshelf';\nimport ProductToken from '../products/model/ProductToken';\n\nimport env from '../../common/env';\nimport * as constants from '../../common/constants';\nimport ErrorCard from '../../common/components/ErrorCard';\nimport PathUtils from '../../common/utils/PathUtils';\n\n@inject('user', 'language', 'bookshelfStatus', 'bookshelf', 'userStatus', 'productToken')\n@observer\nclass BookshelfContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.userDetail = {};\n    this.state = {\n      dataFetched: false\n    };\n    this.canadianProxy = PathUtils.getQueryParameterbyName('cp');\n  }\n\n  componentDidMount() {\n    const { bookshelf, productToken } = this.props;\n    const user = Framework.getStoreRegistry().getStore('user');\n\n    this.userDetail = user;\n    productToken.fetch(env.PRODUCT_TOKEN);\n    bookshelf.fetch();\n    Framework.getEventManager().on(constants.USER_PROFILE_FETCHED, (user) => {\n      const { ldClient } = this.props;\n      const launchdarklyUser = Framework.getStoreRegistry().getStore('launchdarkly');\n      if (user && ldClient && ldClient.getUser() && launchdarklyUser && launchdarklyUser.ownerId === '') {\n        this.updateLaunchDarklyUser();\n      }\n    });\n  }\n\n  updateLaunchDarklyUser = () => {\n    const { user, ldClient } = this.props;\n    if (user.id && user.ldUserHash) {\n      ldClient.identify({\n        key: user.id, options: { hash: user.ldUserHash }\n      }, user.ldUserHash).then((res) => {\n        console.log('ld success');\n      }).catch((err) => {\n        console.log('ld error');\n      });\n    }\n  }\n\n  /**\n   * A method to handle book click\n   *\n   * @param {Object} bookData\n   */\n  // TODO: Revisit and change the redirection logic based on BMC once data is available\n  handleBookClick = (bookData, type, courseId = '') => {\n    const { match } = this.props;\n    const lastLocationStore = Framework.getStoreRegistry().getStore('lastlocation');\n    let urlPrefix = match.url;\n    // TODO: Use this value for redirection when paper api is ready\n    const {\n      book_id,\n      et1CourseId,\n      iseT1,\n      idpId,\n      product_id,\n      last_activity,\n      product_entitlements\n    } = bookData;\n    const userLastLocation = lastLocationStore.userLocation && lastLocationStore.userLocation.find(location => location.bookId === product_id);\n    const { username, smsUserId, id } = Framework.getStoreRegistry().getStore('user');\n    const getContextPath = courseId && courseId !== '' ? `&context_id=${courseId}` : '';\n    const userLocationDetails = userLastLocation ? `&location=${encodeURIComponent(JSON.stringify(userLastLocation))}` : '';\n    const userPreferredType = `&userPreferredType=${type}`;\n    const canadianProxy = this.canadianProxy === '1' ? '&cp=Y' : '';\n    let productId = product_id;\n    let isIntegratedLaunch = false;\n    const integratedBMC = [ constants.INTEGRATED_SMS, constants.INTEGRATED_RUMBA, constants.CG_RENEWALS];\n    const businessModelList = [constants.DIRECT_TO_LEARNER, constants.DIRECT_TO_LEARNER_RENEWAL, constants.COURSE_WARE, constants.DIRECT_TO_CONSUMER];\n    if (integratedBMC.includes(product_entitlements.business_model_code)) {\n      productId = book_id;\n      isIntegratedLaunch = true;\n    }\n\n    if (urlPrefix.indexOf('/bookshelf') > -1) {\n      urlPrefix = match.url.split('/bookshelf')[0];\n    }\n    if (isIntegratedLaunch) {\n      window.location.href = `${env.PAPER_API_BASE_URL}?custom_bookid=${productId}&custom_smsid=${smsUserId}&custom_pi_id=${id}${canadianProxy}${getContextPath}${userLocationDetails}${userPreferredType}&custom_person_id=${username}`;\n    } else if (businessModelList.includes(product_entitlements.business_model_code) && !window.location.host.includes(constants.ETEXT_PERF)) {\n      if (courseId !== '') {\n        window.location.href = `${urlPrefix}/courses/${courseId}?${userLocationDetails}${userPreferredType}`;\n      } else {\n        window.location.href = `${urlPrefix}/products/${productId}?${userLocationDetails}${userPreferredType}`;\n      }\n    } else if (courseId !== '') {\n      window.location.href = `${urlPrefix}/courses/${courseId}?${userLocationDetails}${userPreferredType}`;\n    } else {\n      window.location.href = `${urlPrefix}/products/${productId}?${userLocationDetails}${userPreferredType}`;\n    }\n  }\n\n  handleLogout = () => {\n    Framework.logout();\n  }\n\n  render() {\n    const {\n      bookshelf,\n      bookshelfStatus,\n      language,\n      userStatus,\n      productToken\n    } = this.props;\n    const errorCode = (bookshelfStatus.error || userStatus.error) && constants.ERROR_CODE_MARIN;\n    Framework.getEventManager().on(constants.BOOKSHELF_DATA_FETCHED, () => {\n      this.setState({\n        dataFetched: true\n      });\n    });\n\n    return (\n      (bookshelfStatus.error || userStatus.error)\n        ? <ErrorCard code={errorCode} />\n        : (\n          <BookshelfComponent\n            books={bookshelf.books}\n            onBookClick={this.handleBookClick}\n            locale={language.currentLanguage}\n            consoleUrl={env.CONSOLE_URL}\n            type=\"etext\"\n            userDetail={this.userDetail}\n            isBookshelfPending={productToken.verified ? bookshelfStatus.isPending : true}\n            isUserPending={productToken.verified ? userStatus.isPending : true}\n            onLogout={this.handleLogout}\n          />\n        )\n    );\n  }\n}\n\nBookshelfContainer.propTypes = {\n  bookshelf: shapes.modelOf(Bookshelf).isRequired,\n  bookshelfStatus: shapes.state.isRequired,\n  language: shapes.language.isRequired,\n  ldClient: PropTypes.object.isRequired,\n  user: shapes.user.isRequired,\n  match: shapes.match.isRequired,\n  userStatus: shapes.state.isRequired,\n  productToken: shapes.modelOf(ProductToken).isRequired\n};\n\nexport default withLDConsumer()(BookshelfContainer);\n"],"sourceRoot":""}